package MileStonepackage;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.time.Duration;
import java.util.ArrayList;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.Test;

public class Scneario3 {
	WebDriver driver;
	List<String> mainmenulist = new ArrayList<>();
	private static final String FILE_PATH = "/home/zadmin/Desktop/TESTNG/TestNGProject/milestonewrite.txt"; // Update with your path
	private WebDriverWait wait;
	
	@BeforeSuite
	public void openurl() throws InterruptedException {
		driver=new ChromeDriver();
		driver.get("https://www.zebra.com/");
		driver.manage().window().maximize();
        Thread.sleep(1000);
      
       
        WebElement checkbtn = driver.findElement(By.xpath("//button[text()='Accept Cookies']"));
		
		 ((org.openqa.selenium.JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", checkbtn);

		checkbtn.click();
		
		Thread.sleep(1000);
		wait = new WebDriverWait(driver, Duration.ofSeconds(60));
		
	}
	
	@Test(priority=2)
	public void listurlsofmainmenu() throws Exception {
		
		WebElement navclass = driver.findElement(By.className("cmp-container__nav--navigation-items")); 
	
		 List<WebElement> elem =  navclass.findElements(By.tagName("span"));
		 
		 for(WebElement spanname:elem) {
			 String text = spanname.getText();
			    if (text != null && !text.trim().isEmpty()) {
			        mainmenulist.add(text);
			    }
			
		 }
		 
		 writeToFile("List of Main Menu Values");
		
		for(String mainmenuname :mainmenulist) {
			System.out.println(mainmenuname);
			writeToFile("First Level menu is :");
			writeToFile(mainmenuname);
			 getSecondLevelItems(mainmenuname);
			String xpath = String.format("//span[text()='%s']", mainmenuname);
			WebElement mainmenunameele = driver.findElement(By.xpath(xpath));
			((org.openqa.selenium.JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", mainmenunameele);
			mainmenunameele.click();
			Thread.sleep(1000);
			
		}
	
	}
	
	@Test(priority=3)
	public void softwaremenunav() {
		
		
		
		
	}
	
	
		
		public void writeToFile(String content) {
	        BufferedWriter writer = null;
	        try {
	            writer = new BufferedWriter(new FileWriter(FILE_PATH, true)); 
	            writer.write(content);
	            writer.newLine(); 
	            System.out.println("Successfully wrote to the file: " + FILE_PATH);
	        } catch (IOException e) {
	            System.err.println("An error occurred while writing to the file: " + e.getMessage());
	        } finally {
	            try {
	                if (writer != null) {
	                    writer.close(); 
	                }
	            } catch (IOException e) {
	                System.err.println("Failed to close the writer: " + e.getMessage());
	            }
	        }
	    }	
		
	
		public void getSecondLevelItems(String topLevelText) {
	        List<String> secondLevelItems = new ArrayList<>();

	        try {
	            // Click the top-level menu to expand it
	            WebElement topLevelElement = wait.until(ExpectedConditions.visibilityOfElementLocated(
	                    By.xpath("//div[contains(@class, 'navigation-item__first-level-item')][.//span[text()='" + topLevelText + "']]")
	            ));
	            topLevelElement.click();

	            // Retrieve the second-level items
	            List<WebElement> secondLevelElements = wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(
	                    By.xpath("//div[@data-megamenu='" + topLevelText + "']//div[contains(@class, 'navigation-item__second-level-items')]//span[contains(@class, 'navigation-item__second-lvl-label')]")
	            ));

	            // Collect text of each second-level item and print them
	            for (WebElement secondLevel : secondLevelElements) {
	                String itemText = secondLevel.getText();
	                secondLevelItems.add(itemText);
	                System.out.println("  Second Level: " + itemText); // Print the item here
	                writeToFile("  Second Level: " + itemText);
	            }
	        } catch (Exception e) {
	            System.err.println("Error retrieving second-level items: " + e.getMessage());
	        }

	        if (secondLevelItems.isEmpty()) {
	            System.out.println("No second-level items found for: " + topLevelText);
	        }
	    }
		
		
		
		
		
		
		
		
}

	
	
	
	
	
	

	
	
	
	

